1.Установка GitBash
2.Використання Внутрішнього терміналу в VSC за допомогою колавіши  [ctrl+`]  
3.[pwd] - узнати своє місцeзнаходження
4.[ls] -  узнати вміст тої папки, де ми знаходимся.
5.[cd..] вийти на рівень вище
6.[ctrl=L] очистити термінал
7.[cd name folder]
8.[d:] перейти на диск d
9.[mkdir 111] - створити папку з назвою 111
10.[touch  index.html] створити файл  index.html
11. [rm] видалити файл
12.
 //////////////////////////////////////////////////////
node.js - утиліта для виконання js коду за межами браузера
npm - утиліта для роботи пакетів


....................................
1. створюємо скелет проекту
npm init -  створюємо маніфест проекту(створюється файлик pacadge.json)

2. npmjs.com  ............................. сайт з пакетами
пакети ....................................код,що написаний іншими та який можна використовувати;

npm i joi ................................. додаємо бібліотеку joi
npm i uuid-v4 ..............................додаємо бібліотеку uuid-v4
npm i express ..............................додаємо бібліотеку express

npm remove uuid-v4 ..............................видаляємо бібліотеку uuid-v4




У файлі gitignor  пишемо node_modules/ щоб не додавати бібліотеки до гітхабу

/////////////////////////////////////////////////////////////////////////////////
package.json
{
  "name": "js-66",
  "version": "1.0.0",
  "description": "npm bdasics",
  "main": "7-1.js",
  
    "scripts": {..............................................................тут реєструємо команди, які пізніше хочемо викликати (наприклад npm run qwe)
    "qwe":" echo \"Привіт це скрипрт qwe",
    "start": "node app.js",
    "prestart": "echo \" це prestart",.......................................команда для виведення повідомлення
    "poststart": "echo \" це poststart",

    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/IvanSlivenko/js-66.git"
  },
  "author": "",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/IvanSlivenko/js-66/issues"
  },
  "homepage": "https://github.com/IvanSlivenko/js-66#readme",
  "dependencies": {
    "express": "^4.18.2",
    "joi": "^17.7.0",
    "shortid": "^2.2.16"
  }
}

................................... pre i post скрипти
"scripts": {..............................................................тут реєструємо команди, які пізніше хочемо викликати (наприклад npm run qwe)
    "qwe":" echo \"Привіт це скрипрт qwe",
    "start": "node app.js",
    "prestart": "echo \" це prestart",.......................................команда для виведення повідомлення
    "poststart": "echo \" це poststart",

    "test": "echo \"Error: no test specified\" && exit 1"
  },



............................................................................... Скрипт для запуску Bебсервера
const express = require('express');
const app = express();
const listener = app.listen(4444, () => { 
    console.log(`Веб сервер запущено на порту ${listener.address().port}`);
})
................................................................................

npm install --save-dev @babel/core @babel/cli...................................скрипт для установки пакетів в розділ dev dependencies
  
"devDependencies": {
    "@babel/cli": "^7.20.7",
    "@babel/core": "^7.20.12"
  }............................................................................. ці пакети тільки для розробки

.................................................................................. пакети babel потрібні для транспіляції нового коду для старих браузерів
 











https://www.youtube.com/watch?v=Zm-03ilbFnc
1:35:49

