toFixed() - кількість знаків після коми
includes
for of
if

...args
toLowerCase
ToUpperCase



forEach
//////////////////////////////////////////////////////////////////////
const numberss = [5, 10, 15, 20, 25];

 numberss.forEach(function (number,indexNumber,originalMasyv) {
    //  console.log(originalMasyv);
     console.log('indexNumber',indexNumber, 'number ',number,'of',originalMasyv);
     
 })
////////////////////////////////////////////////////////////////////////
map.................... перебирає масив та повертає новий масив, де з кожним елементом виконує наше завдання
.............................................................................................
masysv.map(element=>{

retern  element*2})

////////////////////////////////////////////////////////////////////////
filter...................перебирає масив та повертає всі елементи масиву, що задовольняє нашу вимогу
.............................................................................................
const numbers = [5, 10, 15, 20, 25];
const newNumbers = numbers.filter((number) => {
    return number > 10
})
console.log('numbers',numbers);//numbers (5) [5, 10, 15, 20, 25]
console.log('newnumbers',newNumbers);  //newnumbers (3) [15, 20, 25]
............................................................................................
////////////////////////////////////////////////////////////////////////////////////////////////
find  ...................перебирає масив та повертає перший елемент масиву, що задовольняє нашу вимогу
...............................................................................................
const numbersThree = [5, 10, 15, 20, 25];
const numberThree = numbersThree.find(elem => elem > 15);
console.log(numberThree);//20
...............................................................................................
////////////////////////////////////////////////////////////////////////////////////////////////
 
every .............................перебирає масив та повертає true якщо всі елементи масиву відповідають  нашій умові  
.................................................................................................
const supers = players.every(elem => elem.timePlayed > 50);
console.log(supers);//true 
.................................................................................................
////////////////////////////////////////////////////////////////////////////////////////////////////
some .............................перебирає масив та повертає true якщо один елемент масиву відповідає  нашій умові
/////////////////////////////////
reduse.............................
......................................................................


........................................................................
//////////////////////////////////////////////////////////////////////////



sort



const cart = [54, 28, 105, 70, 92, 17, 120, 12, 25, 90];

Метод : for  of  Перебір масива
//////////////////////////////////////////////

const logCart =(items) => { 
    for (const item of items) {
console.log(item);    
    
}
}

logCart(cart);


Метод : arguments =>Array.from(arguments); перетворення списка аргументів в масив
//////////////////////////////////////////////////////////////////////////////////
const fn = function() { 
    console.log(arguments);
    const args = Array.from(arguments);
    console.log(args);

    
}
fn(1, 2, 3);
fn(1,2,3,4,5);


Метод "рест операторів"
///////////////////////////////////////////////////////////////
const tyu = function (a,b,c,...args) { 
    console.log(`${ a } ${ b } ${ c } ${ args }`);
    console.log(args.sort());
    let result = 0;
    for (const elem of args) {
        
          result += elem;
        
    }

    return result;
}

console.log('Сумма = ',tyu(1, 2, 3, 4, 5, 6, 7, 5));                       
-------------------------------------------------------------------------- Результат
1 2 3 4,5,6,7,5
(5) [4, 5, 5, 6, 7]
Сумма =  27
////////////////////////////////////////////////////////////////////////////////////////////